<idea-plugin version="2">
  <id>com.squareup.sqldelight</id>
  <name>SQLDelight</name>
  <category>Custom Languages</category>
  <vendor url="https://github.com/square">Square, Inc.</vendor>
  <idea-version
      since-build="145"
  />
  <depends>com.intellij.modules.lang</depends>
  <depends>org.jetbrains.android</depends>
  <depends>org.jetbrains.plugins.gradle</depends>

  <description><![CDATA[
      Android sqlite interface generator.<br>
      Generates interfaces for safely running SQLite statements and <br>
      mapping back from a cursor.
    ]]></description>

  <change-notes><![CDATA[
  <p>
  0.7.0
  <ul>
    <li>New: Generated code has been updated to use the Support SQLite library only. All queries now generate statement objects instead of a raw strings.</li>
    <li>New: Statement folding in the IDE.</li>
    <li>New: Boolean types are now automatically handled.</li>
    <li>Fix: Remove deprecated marshals from code generation.</li>
    <li>Fix: Correct 'avg' SQL function type mapping to be REAL.</li>
    <li>Fix: Correctly detect 'julianday' SQL function.</li>
  </ul>
  </p>
]]></change-notes>

  <module-components>
    <component>
      <implementation-class>com.squareup.sqldelight.intellij.SqlDelightModuleComponent</implementation-class>
    </component>
  </module-components>

  <extensions defaultExtensionNs="com.intellij">
    <compileServer.plugin classpath="sqldelight-jps-plugin.jar"/>

    <fileTypeFactory implementation="com.squareup.sqldelight.intellij.lang.SqliteFileTypeFactory"/>
    <externalAnnotator language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDocumentAnnotator"/>
    <gotoDeclarationHandler
        implementation="com.squareup.sqldelight.intellij.lang.SqliteGotoDeclarationHandler"/>
    <postStartupActivity implementation="com.squareup.sqldelight.intellij.SqlDelightStartupActivity"/>
    <errorHandler implementation="com.squareup.sqldelight.intellij.SqlDelightErrorHandler" />

    <completion.contributor language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.ClassCompletionContributor"/>
    <completion.contributor language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightCompletionContributor"/>
    <findUsagesHandlerFactory
        implementation="com.squareup.sqldelight.intellij.lang.SqliteFindUsagesHandlerFactory"/>
    <annotator language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.psi.ClassNameElementAnnotator" />

    <lang.findUsagesProvider
        implementationClass="com.squareup.sqldelight.intellij.lang.SqliteFindUsagesProvider"
        language="Sqlite"/>
    <lang.fileViewProviderFactory language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightFileViewProviderFactory"/>
    <lang.syntaxHighlighterFactory key="SqliteSyntaxHighlighter"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqliteSyntaxHighlighterFactory"/>
    <lang.parserDefinition language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqliteParserDefinition"/>
    <lang.ast.factory language='Sqlite'
        implementationClass="com.squareup.sqldelight.intellij.lang.SqliteASTFactory"/>
    <lang.braceMatcher language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlitePairedBraceMatcher"/>
    <lang.quoteHandler language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqliteTokenSetQuoteHandler"/>
    <lang.commenter language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightCommenter"/>
    <lang.psiStructureViewFactory language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqlDelightStructureViewFactory"/>
    <lang.formatter language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.formatter.SqlDelightFormattingModelBuilder"/>
    <lang.foldingBuilder language="Sqlite"
        implementationClass="com.squareup.sqldelight.intellij.lang.SqliteFoldingBuilder"/>
  </extensions>

  <actions>
    <action id="SQDelight.CopyAsSqlite" class="com.squareup.sqldelight.intellij.actions.CopyAsSqliteAction" text="Copy as SQLite">
      <add-to-group group-id="CutCopyPasteGroup" anchor="after" relative-to-action="$Copy"/>
      <add-to-group group-id="EditorPopupMenu" anchor="after" relative-to-action="$Copy"/>
      <keyboard-shortcut keymap="Mac OS X" first-keystroke="control shift C"/>
    </action>
  </actions>
</idea-plugin>
