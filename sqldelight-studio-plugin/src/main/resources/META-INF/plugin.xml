<idea-plugin version="2">
  <id>com.squareup.sqldelight</id>
  <name>SQLDelight</name>
  <category>Custom Languages</category>
  <vendor url="https://github.com/square">Square, Inc.</vendor>
  <idea-version
      since-build="134.549"
      until-build="143.9999"
  />
  <depends>com.intellij.modules.lang</depends>
  <depends>org.jetbrains.android</depends>
  <depends>org.jetbrains.plugins.gradle</depends>

  <description><![CDATA[
      Android sqlite interface generator.<br>
      Generates interfaces for implementing sqlite tables, <br>
      Mapping from a cursor and creating ContentValues.
    ]]></description>

  <change-notes><![CDATA[
  <p>
  0.2.2
  <ul>
  <li>New: Compile-time validation of the columns used by insert, update, delete, index, and trigger statements.</li>
  <li>Fix: Don't crash IDE plugin on file move/create.</li>
  </ul>
  </p>
  <p>
  0.2.1
  <ul>
  <li>New: Ctrl+`/` (Cmd+`/` on OSX) toggles comment of the selected line(s).</li>
  <li>New: Compile-time validation of the columns used by SQL queries.</li>
  <li>Fix: Support Windows paths in both the IDE and Gradle plugin.</li>
  </ul>
  </p>
  <p>
  0.2.0
  <ul>
  <li>New: Added copy constructor to Marshal class.</li>
  <li>New: Update to Kotlin 1.0 final.</li>
  <li>Fix: Report 'sqldelight' folder structure problems in a non-failing way.</li>
  <li>Fix: Forbid columns named `table_name`. Their generated constant clashes with the table name constant.</li>
  <li>Fix: Ensure IDE plugin generates model classes immediately and regardless of whether `.sq` files were opened.</li>
  <li>Fix: Support Windows paths in both the IDE and Gradle plugin.</li>
  </ul>
  </p>
]]></change-notes>

  <extensions defaultExtensionNs="com.intellij">
    <fileTypeFactory implementation="com.squareup.sqldelight.lang.SqliteFileTypeFactory"/>
    <externalAnnotator language="Sqlite"
        implementationClass="com.squareup.sqldelight.lang.SqlDocumentAnnotator"/>
    <gotoDeclarationHandler
        implementation="com.squareup.sqldelight.lang.SqliteGotoDeclarationHandler"/>
    <postStartupActivity implementation="com.squareup.sqldelight.SqlDelightStartupActivity"/>
    <errorHandler implementation="com.squareup.sqldelight.SqlDelightErrorHandler" />

    <completion.contributor language="Sqlite"
        implementationClass="com.squareup.sqldelight.lang.SqliteCompletionContributor"/>
    <findUsagesHandlerFactory
        implementation="com.squareup.sqldelight.lang.SqliteFindUsagesHandlerFactory"/>

    <lang.findUsagesProvider
        implementationClass="com.squareup.sqldelight.lang.SqliteFindUsagesProvider"
        language="Sqlite"/>
    <lang.fileViewProviderFactory language="Sqlite"
        implementationClass="com.squareup.sqldelight.lang.SqlDelightFileViewProviderFactory"/>
    <lang.syntaxHighlighterFactory key="SqliteSyntaxHighlighter"
        implementationClass="com.squareup.sqldelight.lang.SqliteSyntaxHighlighterFactory"/>
    <lang.parserDefinition language="Sqlite"
        implementationClass="com.squareup.sqldelight.lang.SqliteParserDefinition"/>
    <lang.ast.factory language='Sqlite'
        implementationClass="com.squareup.sqldelight.lang.SqliteASTFactory"/>
    <lang.braceMatcher language="Sqlite"
        implementationClass="com.squareup.sqldelight.lang.SqlitePairedBraceMatcher"/>
    <lang.quoteHandler language="Sqlite"
        implementationClass="com.squareup.sqldelight.lang.SqliteTokenSetQuoteHandler"/>
    <lang.commenter language="Sqlite"
        implementationClass="com.squareup.sqldelight.lang.SqlDelightCommenter"/>
  </extensions>
</idea-plugin>
