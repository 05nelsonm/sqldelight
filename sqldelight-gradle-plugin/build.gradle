apply plugin: 'kotlin'
apply plugin: 'idea'

configurations {
  provided
}

sourceSets {
  main.compileClasspath += configurations.provided
}

idea {
  module {
    scopes.PROVIDED.plus += [configurations.provided]
  }
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

task createClasspathManifest {
  def outputDir = file("$buildDir/$name")

  inputs.files sourceSets.main.runtimeClasspath
  outputs.dir outputDir

  doLast {
    outputDir.mkdirs()
    file("$outputDir/plugin-classpath.txt").text = sourceSets.main.runtimeClasspath.join("\n")
  }
}

task pluginVersion {
  def outputDir = file("src/version/kotlin")

  outputs.dir outputDir

  doLast {
    def versionFile = file("$outputDir/com/squareup/sqldelight/gradle/Version.kt")
    versionFile.parentFile.mkdirs()
    versionFile.text = """// Generated file. Do not edit!
package com.squareup.sqldelight.gradle

internal val VERSION = "${project.version}"
"""
  }
}
tasks.getByName('compileKotlin').dependsOn('pluginVersion')

sourceSets {
  main.java.srcDir "src/version/kotlin"
}

dependencies {
  provided gradleApi()
  compile project(':sqldelight-compiler')
  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  compile rootProject.ext.androidPlugin

  testCompile gradleTestKit()
  testCompile 'junit:junit:4.12'
  testCompile 'com.google.truth:truth:0.27'
  testRuntime files(createClasspathManifest)
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
